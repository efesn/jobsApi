openapi: 3.0.0
info:
  title: Jobs API
  contact: { }
  version: '1.0'
servers:
  - url: https://jobs-api-02-55e4f411eca1.herokuapp.com/api/v1
    variables: { }
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register
      operationId: Register
      parameters: [ ]
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
            example:
              name: jake
              email: jake@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      security: [ ]
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login
      operationId: Login
      parameters: [ ]
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            example:
              email: jake@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      security: [ ]
  /jobs:
    get:
      tags:
        - Jobs
      summary: Get All Jobs
      operationId: Jobs
      parameters: [ ]
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      security:
        - bearer: [ ]
    post:
      tags:
        - Jobs
      summary: Create-job
      operationId: Create job
      parameters: [ ]
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create-job-Request'
            example:
              company: google
              position: front-end developer
        required: true
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      security:
        - bearer: [ ]
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID.
    get:
      tags:
        - Jobs
      summary: Get single job
      operationId: Getsinglejob
      parameters: [ ]
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      security:
        - bearer: [ ]
    patch:
      tags:
        - Jobs
      summary: Update job
      operationId: Updatejob
      parameters: [ ]
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatejobRequest'
            example:
              company: apple
              position: front-end
        required: true
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      security:
        - bearer: [ ]
    delete:
      tags:
        - Jobs
      summary: Delete job
      operationId: Deletejob
      parameters: [ ]
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      security:
        - bearer: [ ]
components:
  schemas:
    LoginRequest:
      title: LoginRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: john2@gmail.com
        password: secret
    RegisterRequest:
      title: RegisterRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: jake2
        email: jake2@gmail.com
        password: secret
    Create-job-Request:
      title: Create-job-Request
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: google
        position: front-end developer
    UpdatejobRequest:
      title: UpdatejobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: apple
        position: front-end
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: [ ]
tags:
  - name: Misc
    description: ''
  - name: Auth
    description: ''
  - name: Jobs
    description: ''
